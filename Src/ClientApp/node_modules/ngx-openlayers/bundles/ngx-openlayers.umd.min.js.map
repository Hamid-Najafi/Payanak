{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-openlayers/lib/map.component.ts","ng://ngx-openlayers/lib/view.component.ts","ng://ngx-openlayers/lib/graticule.component.ts","ng://ngx-openlayers/lib/layers/layer.component.ts","ng://ngx-openlayers/lib/layers/layergroup.component.ts","ng://ngx-openlayers/lib/layers/layerimage.component.ts","ng://ngx-openlayers/lib/layers/layertile.component.ts","ng://ngx-openlayers/lib/layers/layervector.component.ts","ng://ngx-openlayers/lib/layers/layervectortile.component.ts","ng://ngx-openlayers/lib/sources/source.component.ts","ng://ngx-openlayers/lib/tilegrid.component.ts","ng://ngx-openlayers/lib/sources/raster.component.ts","ng://ngx-openlayers/lib/sources/xyz.component.ts","ng://ngx-openlayers/lib/sources/osm.component.ts","ng://ngx-openlayers/lib/sources/bingmaps.component.ts","ng://ngx-openlayers/lib/sources/vector.component.ts","ng://ngx-openlayers/lib/sources/cluster.component.ts","ng://ngx-openlayers/lib/tilegridwmts.component.ts","ng://ngx-openlayers/lib/sources/tilewmts.component.ts","ng://ngx-openlayers/lib/formats/format.component.ts","ng://ngx-openlayers/lib/sources/vectortile.component.ts","ng://ngx-openlayers/lib/sources/tilewms.component.ts","ng://ngx-openlayers/lib/sources/tilejson.component.ts","ng://ngx-openlayers/lib/sources/geojson.component.ts","ng://ngx-openlayers/lib/sources/imagestatic.component.ts","ng://ngx-openlayers/lib/sources/imagewms.component.ts","ng://ngx-openlayers/lib/sources/imagearcgisrest.component.ts","ng://ngx-openlayers/lib/feature.component.ts","ng://ngx-openlayers/lib/geom/simplegeometry.component.ts","ng://ngx-openlayers/lib/geom/geometrycircle.component.ts","ng://ngx-openlayers/lib/geom/geometrylinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultilinestring.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipoint.component.ts","ng://ngx-openlayers/lib/geom/geometrymultipolygon.component.ts","ng://ngx-openlayers/lib/geom/geometrypoint.component.ts","ng://ngx-openlayers/lib/geom/geometrypolygon.component.ts","ng://ngx-openlayers/lib/content.component.ts","ng://ngx-openlayers/lib/overlay.component.ts","ng://ngx-openlayers/lib/coordinate.component.ts","ng://ngx-openlayers/lib/collectioncoordinates.component.ts","ng://ngx-openlayers/lib/styles/style.component.ts","ng://ngx-openlayers/lib/styles/circle.component.ts","ng://ngx-openlayers/lib/styles/text.component.ts","ng://ngx-openlayers/lib/styles/stroke.component.ts","ng://ngx-openlayers/lib/styles/icon.component.ts","ng://ngx-openlayers/lib/styles/fill.component.ts","ng://ngx-openlayers/lib/controls/default.component.ts","ng://ngx-openlayers/lib/controls/control.component.ts","ng://ngx-openlayers/lib/controls/attribution.component.ts","ng://ngx-openlayers/lib/controls/fullscreen.component.ts","ng://ngx-openlayers/lib/controls/mouseposition.component.ts","ng://ngx-openlayers/lib/controls/overviewmap.component.ts","ng://ngx-openlayers/lib/controls/rotate.component.ts","ng://ngx-openlayers/lib/controls/scaleline.component.ts","ng://ngx-openlayers/lib/controls/zoom.component.ts","ng://ngx-openlayers/lib/controls/zoomslider.component.ts","ng://ngx-openlayers/lib/controls/zoomtoextent.component.ts","ng://ngx-openlayers/lib/formats/mvt.component.ts","ng://ngx-openlayers/lib/interactions/default.component.ts","ng://ngx-openlayers/lib/interactions/doubleclickzoom.component.ts","ng://ngx-openlayers/lib/interactions/draganddrop.component.ts","ng://ngx-openlayers/lib/interactions/dragbox.component.ts","ng://ngx-openlayers/lib/interactions/dragpan.component.ts","ng://ngx-openlayers/lib/interactions/dragrotate.component.ts","ng://ngx-openlayers/lib/interactions/dragrotateandzoom.component.ts","ng://ngx-openlayers/lib/interactions/dragzoom.component.ts","ng://ngx-openlayers/lib/interactions/mousewheelzoom.component.ts","ng://ngx-openlayers/lib/interactions/pinchzoom.component.ts","ng://ngx-openlayers/lib/interactions/draw.component.ts","ng://ngx-openlayers/lib/interactions/select.component.ts","ng://ngx-openlayers/lib/interactions/modify.component.ts","ng://ngx-openlayers/lib/interactions/translate.component.ts","ng://ngx-openlayers/lib/attribution.component.ts","ng://ngx-openlayers/lib/attributions.component.ts","ng://ngx-openlayers/lib/sources/utfgrid.component.ts","ng://ngx-openlayers/public_api.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","MapComponent","host","componentType","width","height","controls","interactions","olClick","EventEmitter","dblClick","moveStart","moveEnd","pointerDrag","pointerMove","onpostrender","postRender","onprerender","propertyChange","singleClick","ngOnInit","_this","instance","Map","setTarget","nativeElement","firstElementChild","on","event","emit","ngOnChanges","changes","properties","key","currentValue","setProperties","ngAfterViewInit","updateSize","Component","args","selector","template","ElementRef","Input","Output","ViewComponent","zoomAnimation","changeZoom","changeResolution","changeCenter","View","setView","animate","zoom","setZoom","ngOnDestroy","GraticuleComponent","map","Graticule","setMap","ngAfterContentInit","strokeStyle","showLabels","lonLabelPosition","latLabelPosition","LayerComponent","prerender","undefined","postrender","getLayers","push","remove","un","previousValue","LayerGroupComponent","group","_super","call","tslib_1.__extends","Group","decorators","type","SkipSelf","Optional","LayerImageComponent","Image","LayerTileComponent","Tile","LayerVectorComponent","Vector","LayerVectorTileComponent","VectorTile","SourceComponent","raster","setSource","sources","_register","s","init","TileGridComponent","resolutions","TileGrid","createXYZ","SourceRasterComponent","layer","beforeOperations","afterOperations","Raster","providers","provide","useExisting","forwardRef","Host","SourceXYZComponent","tileLoadStart","tileLoadEnd","tileLoadError","tileGridXYZ","tileGrid","XYZ","ContentChild","static","SourceOsmComponent","OSM","SourceBingmapsComponent","imagerySet","BingMaps","SourceVectorComponent","SourceClusterComponent","source","sourceVectorComponent","Cluster","setDistance","distance","TileGridWMTSComponent","WMTS","SourceTileWMTSComponent","url","setLayerSource","tileGridWMTS","FormatComponent","SourceVectorTileComponent","format","formatComponent","tileGridComponent","SourceTileWMSComponent","TileWMS","updateParams","params","SourceTileJSONComponent","TileJSON","SourceGeoJSONComponent","GeoJSON","SourceImageStaticComponent","imageLoadStart","imageLoadEnd","imageLoadError","ImageStatic","SourceImageWMSComponent","ImageWMS","SourceImageArcGISRestComponent","ratio","ImageArcGISRest","FeatureComponent","Feature","id","setId","addFeature","removeFeature","SimpleGeometryComponent","setGeometry","GeometryCircleComponent","Circle","defineProperty","getRadius","radius","setRadius","GeometryLinestringComponent","LineString","GeometryMultiLinestringComponent","MultiLineString","GeometryMultiPointComponent","MultiPoint","GeometryMultiPolygonComponent","MultiPolygon","GeometryPointComponent","Point","GeometryPolygonComponent","Polygon","ContentComponent","elementRef","OverlayComponent","content","element","Overlay","addOverlay","removeOverlay","CoordinateComponent","viewHost","geometryPointHost","geometryCircleHost","overlayHost","mapSrid","srid","e","onMapViewChanged","getView","getProjection","getCode","transformCoordinates","target","get","transformedCoordinates","x","y","transform","setCoordinates","setCenter","setPosition","CollectionCoordinatesComponent","geometryLinestring","geometryPolygon","geometryMultipoint","geometryMultilinestring","geometryMultipolygon","Error","coordinates","c","cc","ccc","StyleComponent","featureHost","layerHost","update","changed","Style","setStyle","StyleCircleComponent","setImage","StyleTextComponent","Text","setText","font","setFont","offsetX","setOffsetX","offsetY","setOffsetY","scale","setScale","rotation","setRotation","text","textAlign","setTextAlign","textBaseLine","setTextBaseline","StyleStrokeComponent","styleHost","styleCircleHost","styleTextHost","Stroke","setStroke","stroke","color","setColor","lineCap","setLineCap","lineDash","setLineDash","lineJoin","setLineJoin","miterLimit","setMiterLimit","setWidth","StyleIconComponent","Icon","opacity","setOpacity","src","StyleFillComponent","Fill","setFill","fill","DefaultControlComponent","defaults","forEach","addControl","removeControl","ControlComponent","Control","ControlAttributionComponent","Attribution","ControlFullScreenComponent","FullScreen","ControlMousePositionComponent","MousePosition","ControlOverviewMapComponent","OverviewMap","reloadInstance","ControlRotateComponent","Rotate","ControlScaleLineComponent","ScaleLine","ControlZoomComponent","Zoom","ControlZoomSliderComponent","ZoomSlider","ControlZoomToExtentComponent","ZoomToExtent","FormatMVTComponent","MVT","DefaultInteractionComponent","i","addInteraction","removeInteraction","DoubleClickZoomInteractionComponent","DoubleClickZoom","DragAndDropInteractionComponent","DragAndDrop","DragBoxInteractionComponent","DragBox","DragPanInteractionComponent","DragPan","DragRotateInteractionComponent","DragRotate","DragRotateAndZoomInteractionComponent","DragRotateAndZoom","DragZoomInteractionComponent","DragZoom","MouseWheelZoomInteractionComponent","MouseWheelZoom","PinchZoomInteractionComponent","PinchZoom","DrawInteractionComponent","olChange","olChangeActive","drawEnd","drawStart","Draw","SelectInteractionComponent","olSelect","Select","ModifyInteractionComponent","modifyEnd","modifyStart","Modify","TranslateInteractionComponent","translateEnd","translateStart","translating","Translate","AttributionComponent","html","innerHTML","AttributionsComponent","attributions","length","cmp","setAttributions","ContentChildren","SourceUTFGridComponent","UTFGrid","COMPONENTS","AngularOpenlayersModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component,\n  OnInit,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport Map from 'ol/Map';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport MapEvent from 'ol/MapEvent';\nimport ObjectEvent from 'ol/Object';\nimport RenderEvent from 'ol/render/Event';\nimport { Control } from 'ol/control';\nimport { Interaction } from 'ol/interaction';\n\n@Component({\n  selector: 'aol-map',\n  template: `\n    <div [style.width]=\"width\" [style.height]=\"height\"></div>\n    <ng-content></ng-content>\n  `,\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnChanges {\n  public instance: Map;\n  public componentType = 'map';\n\n  @Input()\n  width = '100%';\n  @Input()\n  height = '100%';\n  @Input()\n  pixelRatio: number;\n  @Input()\n  keyboardEventTarget: Element | string;\n  @Input()\n  loadTilesWhileAnimating: boolean;\n  @Input()\n  loadTilesWhileInteracting: boolean;\n  @Input()\n  logo: string | boolean;\n  @Input()\n  renderer: 'canvas' | 'webgl';\n\n  @Output()\n  olClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  dblClick: EventEmitter<MapBrowserEvent>;\n  @Output()\n  moveStart: EventEmitter<MapEvent>;\n  @Output()\n  moveEnd: EventEmitter<MapEvent>;\n  @Output()\n  pointerDrag: EventEmitter<MapBrowserEvent>;\n  @Output()\n  pointerMove: EventEmitter<MapBrowserEvent>;\n  @Output()\n  onpostrender: EventEmitter<RenderEvent>;\n  @Output()\n  postRender: EventEmitter<MapEvent>;\n  @Output()\n  onprerender: EventEmitter<RenderEvent>;\n  @Output()\n  propertyChange: EventEmitter<ObjectEvent>;\n  @Output()\n  singleClick: EventEmitter<MapBrowserEvent>;\n\n  // we pass empty arrays to not get default controls/interactions because we have our own directives\n  controls: Control[] = [];\n  interactions: Interaction[] = [];\n\n  constructor(private host: ElementRef) {\n    this.olClick = new EventEmitter<MapBrowserEvent>();\n    this.dblClick = new EventEmitter<MapBrowserEvent>();\n    this.moveStart = new EventEmitter<MapEvent>();\n    this.moveEnd = new EventEmitter<MapEvent>();\n    this.pointerDrag = new EventEmitter<MapBrowserEvent>();\n    this.pointerMove = new EventEmitter<MapBrowserEvent>();\n    this.onpostrender = new EventEmitter<RenderEvent>();\n    this.postRender = new EventEmitter<MapEvent>();\n    this.onprerender = new EventEmitter<RenderEvent>();\n    this.propertyChange = new EventEmitter<ObjectEvent>();\n    this.singleClick = new EventEmitter<MapBrowserEvent>();\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.Map instance with:', this);\n    this.instance = new Map(this);\n    this.instance.setTarget(this.host.nativeElement.firstElementChild);\n    this.instance.on('click', (event: MapBrowserEvent) => this.olClick.emit(event));\n    this.instance.on('dblclick', (event: MapBrowserEvent) => this.dblClick.emit(event));\n    this.instance.on('movestart', (event: MapEvent) => this.moveStart.emit(event));\n    this.instance.on('moveend', (event: MapEvent) => this.moveEnd.emit(event));\n    this.instance.on('pointerdrag', (event: MapBrowserEvent) => this.pointerDrag.emit(event));\n    this.instance.on('pointermove', (event: MapBrowserEvent) => this.pointerMove.emit(event));\n    this.instance.on('postrender', (event: RenderEvent) => this.onpostrender.emit(event));\n    this.instance.on('postrender', (event: MapEvent) => this.postRender.emit(event));\n    this.instance.on('prerender', (event: RenderEvent) => this.onprerender.emit(event));\n    this.instance.on('propertychange', (event: ObjectEvent) => this.propertyChange.emit(event));\n    this.instance.on('singleclick', (event: MapBrowserEvent) => this.singleClick.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-map, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngAfterViewInit() {\n    this.instance.updateSize();\n  }\n}\n","import { Component, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport View from 'ol/View';\nimport { MapComponent } from './map.component';\nimport { ObjectEvent } from 'ol';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\n\n@Component({\n  selector: 'aol-view',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ViewComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: View;\n  public componentType = 'view';\n\n  @Input()\n  constrainRotation: boolean | number;\n  @Input()\n  enableRotation: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  resolution: number;\n  @Input()\n  resolutions: number[];\n  @Input()\n  rotation: number;\n  @Input()\n  zoom: number;\n  @Input()\n  zoomFactor: number;\n  @Input()\n  center: Coordinate;\n  @Input()\n  projection: string;\n  @Input()\n  zoomAnimation = false;\n\n  @Output()\n  changeZoom: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  changeResolution: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n  @Output()\n  changeCenter: EventEmitter<ObjectEvent> = new EventEmitter<ObjectEvent>();\n\n  constructor(private host: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.View instance with: ', this);\n    this.instance = new View(this);\n    this.host.instance.setView(this.instance);\n\n    this.instance.on('change:zoom', (event: ObjectEvent) => this.changeZoom.emit(event));\n    this.instance.on('change:resolution', (event: ObjectEvent) => this.changeResolution.emit(event));\n    this.instance.on('change:center', (event: ObjectEvent) => this.changeCenter.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'zoom':\n            /** Work-around: setting the zoom via setProperties does not work. */\n            if (this.zoomAnimation) {\n              this.instance.animate({ zoom: changes[key].currentValue });\n            } else {\n              this.instance.setZoom(changes[key].currentValue);\n            }\n            break;\n          case 'projection':\n            this.instance = new View(this);\n            this.host.instance.setView(this.instance);\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    // console.log('changes detected in aol-view, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-view');\n  }\n}\n","import { Component, Input, AfterContentInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\nimport { Graticule } from 'ol';\nimport { Stroke } from 'ol/style';\nimport { MapComponent } from './map.component';\n\n@Component({\n  selector: 'aol-graticule',\n  template: '<ng-content></ng-content>',\n})\nexport class GraticuleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  instance: any;\n  public componentType = 'graticule';\n\n  @Input()\n  strokeStyle: Stroke;\n  @Input()\n  showLabels: boolean;\n  @Input()\n  lonLabelPosition: number;\n  @Input()\n  latLabelPosition: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    if (properties) {\n      this.instance = new Graticule(properties);\n    }\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngAfterContentInit(): void {\n    this.instance = new Graticule({\n      strokeStyle: this.strokeStyle,\n      showLabels: this.showLabels,\n      lonLabelPosition: this.lonLabelPosition,\n      latLabelPosition: this.latLabelPosition,\n    });\n    this.instance.setMap(this.map.instance);\n  }\n\n  ngOnDestroy(): void {\n    this.instance.setMap(null);\n  }\n}\n","import { OnDestroy, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Event } from 'ol/events';\nimport { MapComponent } from '../map.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\nexport abstract class LayerComponent implements OnInit, OnChanges, OnDestroy {\n  public instance: any;\n  public componentType = 'layer';\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  zIndex: number;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n\n  @Input()\n  prerender: (evt: Event) => void;\n  @Input()\n  postrender: (evt: Event) => void;\n\n  constructor(protected host: MapComponent | LayerGroupComponent) {}\n\n  ngOnInit() {\n    if (this.prerender !== null && this.prerender !== undefined) {\n      this.instance.on('prerender', this.prerender);\n    }\n    if (this.postrender !== null && this.postrender !== undefined) {\n      this.instance.on('postrender', this.postrender);\n    }\n    this.host.instance.getLayers().push(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.getLayers().remove(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n        if (key === 'prerender') {\n          this.instance.un('prerender', changes[key].previousValue);\n          this.instance.on('prerender', changes[key].currentValue);\n        }\n        if (key === 'postrender') {\n          this.instance.un('postrender', changes[key].previousValue);\n          this.instance.on('postrender', changes[key].currentValue);\n        }\n      }\n    }\n    // console.log('changes detected in aol-layer, setting new properties: ', properties);\n    this.instance.setProperties(properties, false);\n  }\n}\n","import { Component, OnDestroy, OnInit, SkipSelf, Optional } from '@angular/core';\nimport { Group } from 'ol/layer';\nimport { LayerComponent } from './layer.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-layer-group',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerGroupComponent extends LayerComponent implements OnInit, OnDestroy {\n  public instance: Group;\n\n  constructor(\n    map: MapComponent,\n    @SkipSelf()\n    @Optional()\n    group?: LayerGroupComponent\n  ) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log(`creating ol.layer.Group instance with:`, this);\n    this.instance = new Group(this);\n    super.ngOnInit();\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { Image } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-layer-image',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerImageComponent extends LayerComponent implements OnInit, OnChanges {\n  public source: Image;\n\n  @Input()\n  opacity: number;\n  @Input()\n  visible: boolean;\n  @Input()\n  extent: Extent;\n  @Input()\n  minResolution: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  zIndex: number;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    this.instance = new Image(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { Tile } from 'ol/layer';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-tile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerTileComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: Tile;\n\n  @Input()\n  preload: number;\n  @Input()\n  useInterimTilesOnError: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Tile instance with:', this);\n    this.instance = new Tile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Optional, OnChanges, SimpleChanges } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Vector } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { StyleFunction } from 'ol/style/Style';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\n\n@Component({\n  selector: 'aol-layer-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorComponent extends LayerComponent implements OnInit, OnDestroy, OnChanges {\n  public source: Vector;\n\n  @Input()\n  renderBuffer: number;\n\n  @Input()\n  style: Style | Style[] | StyleFunction;\n\n  @Input()\n  updateWhileAnimating: boolean;\n\n  @Input()\n  updateWhileInteracting: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.Vector instance with:', this);\n    this.instance = new Vector(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Component, OnInit, Input, Optional, SimpleChanges, OnChanges } from '@angular/core';\nimport { VectorTile } from 'ol/layer';\nimport { RenderType } from 'ol/layer/VectorTile';\nimport { Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { MapComponent } from '../map.component';\nimport { LayerComponent } from './layer.component';\nimport { LayerGroupComponent } from './layergroup.component';\nimport { StyleFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-layer-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class LayerVectorTileComponent extends LayerComponent implements OnInit, OnChanges {\n  @Input()\n  renderBuffer: number;\n  @Input()\n  renderMode: RenderType | string;\n  /* not marked as optional in the typings */\n  @Input()\n  renderOrder: (feature1: Feature, feature2: Feature) => number;\n  @Input()\n  style: Style | Style[] | StyleFunction;\n  @Input()\n  updateWhileAnimating: boolean;\n  @Input()\n  updateWhileInteracting: boolean;\n  @Input()\n  visible: boolean;\n\n  constructor(map: MapComponent, @Optional() group?: LayerGroupComponent) {\n    super(group || map);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.layer.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    super.ngOnInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n}\n","import { Input, OnDestroy } from '@angular/core';\nimport { Source } from 'ol';\nimport { LayerComponent } from '../layers/layer.component';\nimport { SourceRasterComponent } from './raster.component';\n\nexport class SourceComponent implements OnDestroy {\n  public instance: Source;\n  public componentType = 'source';\n\n  @Input()\n  attributions: any;\n\n  constructor(protected host: LayerComponent, protected raster?: SourceRasterComponent) {}\n\n  ngOnDestroy() {\n    if (this.host && this.host.instance) {\n      this.host.instance.setSource(null);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [];\n    }\n  }\n\n  protected _register(s: Source) {\n    if (this.host) {\n      this.host.instance.setSource(s);\n    }\n\n    if (this.raster) {\n      this.raster.sources = [s];\n      this.raster.init();\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { createXYZ } from 'ol/tilegrid';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { Extent } from 'ol/extent';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid',\n  template: '',\n})\nexport class TileGridComponent implements OnInit, OnChanges {\n  instance: TileGrid;\n\n  @Input()\n  extent: Extent;\n  @Input()\n  maxZoom: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  resolutions: number[];\n\n  ngOnInit() {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.resolutions) {\n      this.instance = createXYZ(this);\n    } else {\n      this.instance = new TileGrid(this);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, forwardRef, Host, Input, Output } from '@angular/core';\nimport { Raster, Source } from 'ol/source';\nimport { RasterOperationType, RasterSourceEvent } from 'ol/source/Raster';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { Operation } from 'ol/source/Raster';\n\n@Component({\n  selector: 'aol-source-raster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [\n    {\n      provide: SourceComponent,\n      useExisting: forwardRef(() => SourceRasterComponent),\n    },\n  ],\n})\nexport class SourceRasterComponent extends SourceComponent implements AfterContentInit {\n  instance: Raster;\n\n  @Input()\n  operation?: Operation;\n  @Input()\n  threads?: number;\n  @Input()\n  lib?: any;\n  @Input()\n  operationType?: RasterOperationType;\n\n  @Output()\n  beforeOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n  @Output()\n  afterOperations: EventEmitter<RasterSourceEvent> = new EventEmitter<RasterSourceEvent>();\n\n  sources: Source[] = [];\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.init();\n  }\n\n  init() {\n    this.instance = new Raster(this);\n    this.instance.on('beforeoperations', (event: RasterSourceEvent) => this.beforeOperations.emit(event));\n    this.instance.on('afteroperations', (event: RasterSourceEvent) => this.afterOperations.emit(event));\n    this._register(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  AfterContentInit,\n  forwardRef,\n  OnChanges,\n  ContentChild,\n  SimpleChanges,\n  Optional,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { XYZ } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceRasterComponent } from './raster.component';\nimport { Size } from 'ol/size';\nimport { TileSourceEvent } from 'ol/source/Tile';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LoadFunction, UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-xyz',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceXYZComponent) }],\n})\nexport class SourceXYZComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: XYZ;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  opaque: boolean;\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  minZoom: number;\n  @Input()\n  maxZoom: number;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileSize: number | Size;\n  @Input()\n  tileUrlFunction?: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(TileGridComponent, { static: false })\n  tileGridXYZ: TileGridComponent;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Optional()\n    @Host()\n    layer: LayerTileComponent,\n    @Optional()\n    @Host()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n    this.init();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        properties[key] = changes[key].currentValue;\n      }\n    }\n\n    this.instance.setProperties(properties, false);\n    if (changes.hasOwnProperty('url')) {\n      this.init();\n    }\n  }\n\n  init() {\n    this.instance = new XYZ(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, forwardRef, Input, AfterContentInit, Optional, Output, EventEmitter } from '@angular/core';\nimport { OSM } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { SourceXYZComponent } from './xyz.component';\nimport { SourceRasterComponent } from './raster.component';\nimport { LoadFunction } from 'ol/Tile';\nimport { AttributionLike } from 'ol/source/Source';\nimport { TileSourceEvent } from 'ol/source/Tile';\n\n@Component({\n  selector: 'aol-source-osm',\n  template: `\n    <div class=\"aol-source-osm\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceOsmComponent) }],\n})\nexport class SourceOsmComponent extends SourceXYZComponent implements AfterContentInit {\n  instance: OSM;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  maxZoom: number;\n  @Input()\n  opaque: boolean;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  wrapX: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  constructor(\n    @Host()\n    @Optional()\n    layer: LayerTileComponent,\n    @Host()\n    @Optional()\n    raster?: SourceRasterComponent\n  ) {\n    super(layer, raster);\n  }\n\n  ngAfterContentInit() {\n    if (this.tileGridXYZ) {\n      this.tileGrid = this.tileGridXYZ.instance;\n    }\n\n    this.instance = new OSM(this);\n\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this._register(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { BingMaps } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-bingmaps',\n  template: `\n    <div class=\"aol-source-bingmaps\"></div>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceBingmapsComponent) }],\n})\nexport class SourceBingmapsComponent extends SourceComponent implements OnInit {\n  instance: BingMaps;\n\n  @Input()\n  cacheSize: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  culture: string;\n  @Input()\n  key: string;\n  @Input()\n  imagerySet: 'Road' | 'Aerial' | 'AerialWithLabels' | 'collinsBart' | 'ordnanceSurvey' = 'Aerial';\n  @Input()\n  maxZoom: number;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new BingMaps(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { Vector } from 'ol/source';\nimport Feature from 'ol/format/Feature';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { LoadingStrategy } from 'ol/source/Vector';\n\n@Component({\n  selector: 'aol-source-vector',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorComponent) }],\n})\nexport class SourceVectorComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  useSpatialIndex: boolean;\n  @Input()\n  wrapX: boolean;\n  @Input()\n  url: string;\n  @Input()\n  format: Feature;\n  @Input()\n  strategy: LoadingStrategy;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  ContentChild,\n  AfterContentInit,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Feature } from 'ol';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\nimport { SourceVectorComponent } from './vector.component';\nimport { Cluster, Vector } from 'ol/source';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-source-cluster',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceClusterComponent) }],\n})\nexport class SourceClusterComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: Cluster;\n\n  @Input()\n  distance: number;\n  @Input()\n  geometryFunction?: (feature: Feature) => Point;\n  @Input()\n  wrapX?: boolean;\n\n  @ContentChild(SourceVectorComponent, { static: false })\n  sourceVectorComponent: SourceVectorComponent;\n  source: Vector;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngAfterContentInit() {\n    this.source = this.sourceVectorComponent.instance;\n\n    this.instance = new Cluster(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('distance')) {\n      this.instance.setDistance(this.distance);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport WMTS from 'ol/tilegrid/WMTS';\nimport { TileGridComponent } from './tilegrid.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { Size } from 'ol/size';\n\n@Component({\n  selector: 'aol-tilegrid-wmts',\n  template: '',\n})\nexport class TileGridWMTSComponent extends TileGridComponent implements OnInit {\n  instance: WMTS;\n\n  @Input()\n  origin?: Coordinate;\n  @Input()\n  origins?: Coordinate[];\n  @Input()\n  resolutions: number[];\n  @Input()\n  matrixIds: string[];\n  @Input()\n  sizes?: Size[];\n  @Input()\n  tileSizes?: (number | Size)[];\n  @Input()\n  widths?: number[];\n\n  ngOnInit() {\n    this.instance = new WMTS(this);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  AfterContentInit,\n  ContentChild,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileGridWMTSComponent } from '../tilegridwmts.component';\nimport { WMTS } from 'ol/source';\nimport { WMTS as TileGridWMTS } from 'ol/tilegrid';\nimport { WMTSRequestEncoding } from 'ol/source';\nimport { ProjectionLike } from 'ol/proj';\nimport { LoadFunction } from 'ol/Tile';\nimport { TileSourceEvent } from 'ol/source/Tile';\n\n@Component({\n  selector: 'aol-source-tilewmts',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMTSComponent) }],\n})\nexport class SourceTileWMTSComponent extends SourceComponent implements AfterContentInit, OnChanges {\n  instance: WMTS;\n  @Input()\n  cacheSize?: number;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  tileGrid: TileGridWMTS;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  reprojectionErrorThreshold?: number;\n  @Input()\n  requestEncoding?: WMTSRequestEncoding | string;\n  @Input()\n  layer: string;\n  @Input()\n  style: string;\n  @Input()\n  tileClass?: any;\n  @Input()\n  tilePixelRatio?: number;\n  @Input()\n  version?: string;\n  @Input()\n  format?: string;\n  @Input()\n  matrixSet: string;\n  @Input()\n  dimensions?: any;\n  @Input()\n  url?: string;\n  @Input()\n  tileLoadFunction?: LoadFunction;\n  @Input()\n  urls?: string[];\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  tileLoadStart: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadEnd: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n  @Output()\n  tileLoadError: EventEmitter<TileSourceEvent> = new EventEmitter<TileSourceEvent>();\n\n  @ContentChild(TileGridWMTSComponent, { static: false })\n  tileGridWMTS: TileGridWMTSComponent;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n\n  setLayerSource(): void {\n    this.instance = new WMTS(this);\n    this.instance.on('tileloadstart', (event: TileSourceEvent) => this.tileLoadStart.emit(event));\n    this.instance.on('tileloadend', (event: TileSourceEvent) => this.tileLoadEnd.emit(event));\n    this.instance.on('tileloaderror', (event: TileSourceEvent) => this.tileLoadError.emit(event));\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngAfterContentInit(): void {\n    if (this.tileGridWMTS) {\n      this.tileGrid = this.tileGridWMTS.instance;\n      this.setLayerSource();\n    }\n  }\n}\n","import Feature from 'ol/format/Feature';\n\nexport class FormatComponent {\n  public instance: Feature;\n  public componentType = 'format';\n}\n","import { Component, Host, Input, forwardRef, ContentChild, AfterContentInit } from '@angular/core';\nimport { VectorTile } from 'ol';\nimport Feature from 'ol/format/Feature';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport { LayerVectorTileComponent } from '../layers/layervectortile.component';\nimport { FormatComponent } from '../formats/format.component';\nimport { TileGridComponent } from '../tilegrid.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { UrlFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-vectortile',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceVectorTileComponent) }],\n})\nexport class SourceVectorTileComponent extends SourceComponent implements AfterContentInit {\n  public instance: VectorTile;\n  @Input()\n  cacheSize: number;\n  @Input()\n  overlaps: boolean;\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  tilePixelRatio: number;\n  @Input()\n  tileUrlFunction: UrlFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  @ContentChild(FormatComponent, { static: false })\n  formatComponent: FormatComponent;\n  format: Feature;\n  @ContentChild(TileGridComponent, { static: false })\n  tileGridComponent: TileGridComponent;\n  tileGrid: TileGrid;\n\n  constructor(@Host() layer: LayerVectorTileComponent) {\n    super(layer);\n  }\n\n  /* need the children to construct the OL3 object */\n  ngAfterContentInit() {\n    this.format = this.formatComponent.instance;\n    this.tileGrid = this.tileGridComponent.instance;\n    // console.log('creating ol.source.VectorTile instance with:', this);\n    this.instance = new VectorTile(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnChanges, OnInit, forwardRef, SimpleChanges } from '@angular/core';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\nimport { TileWMS } from 'ol/source';\nimport { TileGrid } from 'ol/tilegrid';\nimport { LoadFunction } from 'ol/Tile';\n\n@Component({\n  selector: 'aol-source-tilewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileWMSComponent) }],\n})\nexport class SourceTileWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: TileWMS;\n  @Input()\n  cacheSize: number;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  gutter: number;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  params: { [key: string]: any };\n  @Input()\n  projection: string;\n  @Input()\n  reprojectionErrorThreshold: number;\n  @Input()\n  serverType: string;\n  @Input()\n  tileGrid: TileGrid;\n  @Input()\n  tileLoadFunction: LoadFunction;\n  @Input()\n  url: string;\n  @Input()\n  urls: string[];\n  @Input()\n  wrapX: boolean;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileWMS(this);\n    this.host.instance.setSource(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { TileJSON } from 'ol/source';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { SourceComponent } from './source.component';\n\n@Component({\n  selector: 'aol-source-tilejson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceTileJSONComponent) }],\n})\nexport class SourceTileJSONComponent extends SourceComponent implements OnInit {\n  instance: TileJSON;\n\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new TileJSON(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { SourceComponent } from './source.component';\nimport { Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport { GeoJSON } from 'ol/format';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-source-geojson',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceGeoJSONComponent) }],\n})\nexport class SourceGeoJSONComponent extends SourceComponent implements OnInit {\n  instance: Vector;\n  format: Feature;\n  @Input()\n  defaultDataProjection: ProjectionLike;\n  @Input()\n  featureProjection: ProjectionLike;\n  @Input()\n  geometryName: string;\n  @Input()\n  url: string;\n\n  constructor(@Host() layer: LayerVectorComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.format = new GeoJSON(this);\n    this.instance = new Vector(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { ImageStatic } from 'ol/source';\nimport { SourceComponent } from './source.component';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { Extent } from 'ol/extent';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { Size } from 'ol/size';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagestatic',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageStaticComponent) }],\n})\nexport class SourceImageStaticComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageStatic;\n\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  imageExtent: Extent;\n  @Input()\n  url: string;\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin?: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  imageSize?: Size;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  setLayerSource(): void {\n    this.instance = new ImageStatic(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnInit() {\n    this.setLayerSource();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const properties: { [index: string]: any } = {};\n    if (!this.instance) {\n      return;\n    }\n    for (const key in changes) {\n      if (changes.hasOwnProperty(key)) {\n        switch (key) {\n          case 'url':\n            this.url = changes[key].currentValue;\n            this.setLayerSource();\n            break;\n          default:\n            break;\n        }\n        properties[key] = changes[key].currentValue;\n      }\n    }\n    this.instance.setProperties(properties, false);\n  }\n}\n","import {\n  Component,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  forwardRef,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { ImageWMS } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagewms',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageWMSComponent) }],\n})\nexport class SourceImageWMSComponent extends SourceComponent implements OnChanges, OnInit {\n  instance: ImageWMS;\n\n  @Input()\n  attributions: AttributionLike;\n  @Input()\n  crossOrigin: string;\n  @Input()\n  hidpi: boolean;\n  @Input()\n  serverType: string;\n  @Input()\n  imageLoadFunction?: LoadFunction;\n  @Input()\n  params: { [key: string]: any };\n  @Input()\n  projection: ProjectionLike | string;\n  @Input()\n  ratio: number;\n  @Input()\n  resolutions: Array<number>;\n  @Input()\n  url: string;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageWMS(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ImageArcGISRest } from 'ol/source';\nimport { LayerImageComponent } from '../layers/layerimage.component';\nimport { SourceComponent } from './source.component';\nimport { ProjectionLike } from 'ol/proj';\nimport { AttributionLike } from 'ol/source/Source';\nimport { LoadFunction } from 'ol/Image';\nimport { ImageSourceEvent } from 'ol/source/Image';\n\n@Component({\n  selector: 'aol-source-imagearcgisrest',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceImageArcGISRestComponent) }],\n})\nexport class SourceImageArcGISRestComponent extends SourceComponent implements OnInit, OnChanges {\n  instance: ImageArcGISRest;\n\n  @Input() projection: ProjectionLike | string;\n  @Input() url: string;\n  @Input() attributions: AttributionLike[];\n  @Input() crossOrigin?: string;\n  @Input() imageLoadFunction?: LoadFunction;\n  @Input() params?: { [k: string]: any };\n  @Input() ratio = 1.5;\n  @Input() resolutions?: number[];\n  @Input() wrapX?: boolean;\n\n  @Output()\n  imageLoadStart = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadEnd = new EventEmitter<ImageSourceEvent>();\n  @Output()\n  imageLoadError = new EventEmitter<ImageSourceEvent>();\n\n  constructor(@Host() layer: LayerImageComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new ImageArcGISRest(this);\n    this.host.instance.setSource(this.instance);\n    this.instance.on('imageloadstart', (event: ImageSourceEvent) => this.imageLoadStart.emit(event));\n    this.instance.on('imageloadend', (event: ImageSourceEvent) => this.imageLoadEnd.emit(event));\n    this.instance.on('imageloaderror', (event: ImageSourceEvent) => this.imageLoadError.emit(event));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes.hasOwnProperty('params')) {\n      this.instance.updateParams(this.params);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { Feature } from 'ol';\nimport { SourceVectorComponent } from './sources/vector.component';\n\n@Component({\n  selector: 'aol-feature',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class FeatureComponent implements OnInit, OnDestroy, OnChanges {\n  public componentType = 'feature';\n  public instance: Feature;\n\n  @Input()\n  id: string | number | undefined;\n\n  constructor(private host: SourceVectorComponent) {}\n\n  ngOnInit() {\n    this.instance = new Feature();\n    if (this.id !== undefined) {\n      this.instance.setId(this.id);\n    }\n    this.host.instance.addFeature(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.host.instance.removeFeature(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance) {\n      this.instance.setId(this.id);\n    }\n  }\n}\n","import { Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { MapComponent } from '../map.component';\nimport SimpleGeometry from 'ol/geom/SimpleGeometry';\n\nexport abstract class SimpleGeometryComponent implements OnInit {\n  public instance: SimpleGeometry;\n  public componentType = 'simple-geometry';\n\n  @Input() srid: string;\n\n  constructor(protected map: MapComponent, protected host: FeatureComponent) {}\n\n  ngOnInit() {\n    this.host.instance.setGeometry(this.instance);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { Circle } from 'ol/geom';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-geometry-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryCircleComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-circle';\n  public instance: Circle;\n\n  @Input()\n  get radius(): number {\n    return this.instance.getRadius();\n  }\n  set radius(radius: number) {\n    this.instance.setRadius(radius);\n  }\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n    // defaulting coordinates to [0,0]. To be overridden in child component.\n    this.instance = new Circle([0, 0]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { LineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-linestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-linestring';\n  public instance: LineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new LineString([[0, 0], [1, 1]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiLineString } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multilinestring',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiLinestringComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multilinestring';\n  public instance: MultiLineString;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiLineString([[[0, 0], [1, 1]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPoint } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipoint',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipoint';\n  public instance: MultiPoint;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPoint([[0, 0], [1, 1]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { MultiPolygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-multipolygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryMultiPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-multipolygon';\n  public instance: MultiPolygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new MultiPolygon([[[[0, 0], [1, 1], [0, 1]]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Point } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-point',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPointComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-point';\n  public instance: Point;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Point([0, 0]);\n    super.ngOnInit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FeatureComponent } from '../feature.component';\nimport { SimpleGeometryComponent } from './simplegeometry.component';\nimport { MapComponent } from '../map.component';\nimport { Polygon } from 'ol/geom';\n\n@Component({\n  selector: 'aol-geometry-polygon',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class GeometryPolygonComponent extends SimpleGeometryComponent implements OnInit {\n  public componentType = 'geometry-polygon';\n  public instance: Polygon;\n\n  constructor(map: MapComponent, host: FeatureComponent) {\n    super(map, host);\n  }\n\n  ngOnInit() {\n    this.instance = new Polygon([[[0, 0], [1, 1], [0, 1]]]);\n    super.ngOnInit();\n  }\n}\n","import { Component, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'aol-content',\n  template: '<ng-content></ng-content>',\n})\nexport class ContentComponent {\n  constructor(public elementRef: ElementRef) {}\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { Overlay, PanOptions } from 'ol';\nimport { ContentComponent } from './content.component';\nimport OverlayPositioning from 'ol/OverlayPositioning';\n\n@Component({\n  selector: 'aol-overlay',\n  template: '<ng-content></ng-content>',\n})\nexport class OverlayComponent implements OnInit, OnDestroy {\n  componentType = 'overlay';\n  instance: Overlay;\n  element: Element;\n  @ContentChild(ContentComponent, { static: true })\n  content: ContentComponent;\n\n  @Input()\n  id: number | string;\n  @Input()\n  offset: number[];\n  @Input()\n  positioning: OverlayPositioning | string;\n  @Input()\n  stopEvent: boolean;\n  @Input()\n  insertFirst: boolean;\n  @Input()\n  autoPan: boolean;\n  @Input()\n  autoPanAnimation: PanOptions;\n  @Input()\n  autoPanMargin: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Overlay(this);\n      this.map.instance.addOverlay(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeOverlay(this.instance);\n    }\n  }\n}\n","import { Component, Optional, OnChanges, Input, SimpleChanges, OnInit } from '@angular/core';\nimport { transform } from 'ol/proj';\nimport { MapComponent } from './map.component';\nimport { GeometryPointComponent } from './geom/geometrypoint.component';\nimport { GeometryCircleComponent } from './geom/geometrycircle.component';\nimport { ViewComponent } from './view.component';\nimport { OverlayComponent } from './overlay.component';\n\n@Component({\n  selector: 'aol-coordinate',\n  template: `\n    <div class=\"aol-coordinate\"></div>\n  `,\n})\nexport class CoordinateComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  x: number;\n  @Input()\n  y: number;\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() viewHost: ViewComponent,\n    @Optional() geometryPointHost: GeometryPointComponent,\n    @Optional() geometryCircleHost: GeometryCircleComponent,\n    @Optional() overlayHost: OverlayComponent\n  ) {\n    // console.log('instancing aol-coordinate');\n    if (geometryPointHost !== null) {\n      this.host = geometryPointHost;\n    } else if (geometryCircleHost !== null) {\n      this.host = geometryCircleHost;\n    } else if (viewHost !== null) {\n      this.host = viewHost;\n    } else if (overlayHost !== null) {\n      this.host = overlayHost;\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance\n      .getView()\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target\n      .get(event.key)\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: number[];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = [this.x, this.y];\n    } else {\n      transformedCoordinates = transform([this.x, this.y], this.srid, this.mapSrid);\n    }\n\n    switch (this.host.componentType) {\n      case 'geometry-point':\n        this.host.instance.setCoordinates(transformedCoordinates);\n        break;\n      case 'geometry-circle':\n      case 'view':\n        this.host.instance.setCenter(transformedCoordinates);\n        break;\n      case 'overlay':\n        this.host.instance.setPosition(transformedCoordinates);\n        break;\n    }\n  }\n}\n","import { Component, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\nimport { MapComponent } from './map.component';\nimport { GeometryLinestringComponent } from './geom/geometrylinestring.component';\nimport { GeometryPolygonComponent } from './geom/geometrypolygon.component';\nimport { GeometryMultiPointComponent } from './geom/geometrymultipoint.component';\nimport { GeometryMultiLinestringComponent } from './geom/geometrymultilinestring.component';\nimport { GeometryMultiPolygonComponent } from './geom/geometrymultipolygon.component';\nimport { Coordinate } from 'ol/coordinate';\nimport { transform } from 'ol/proj';\n\n@Component({\n  selector: 'aol-collection-coordinates',\n  template: `\n    <div class=\"aol-collection-coordinates\"></div>\n  `,\n})\nexport class CollectionCoordinatesComponent implements OnChanges, OnInit {\n  private host: any;\n  private mapSrid = 'EPSG:3857';\n\n  @Input()\n  coordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n  @Input()\n  srid = 'EPSG:3857';\n\n  constructor(\n    private map: MapComponent,\n    @Optional() geometryLinestring: GeometryLinestringComponent,\n    @Optional() geometryPolygon: GeometryPolygonComponent,\n    @Optional() geometryMultipoint: GeometryMultiPointComponent,\n    @Optional() geometryMultilinestring: GeometryMultiLinestringComponent,\n    @Optional() geometryMultipolygon: GeometryMultiPolygonComponent\n  ) {\n    if (!!geometryLinestring) {\n      this.host = geometryLinestring;\n    } else if (!!geometryPolygon) {\n      this.host = geometryPolygon;\n    } else if (!!geometryMultipoint) {\n      this.host = geometryMultipoint;\n    } else if (!!geometryMultilinestring) {\n      this.host = geometryMultilinestring;\n    } else if (!!geometryMultipolygon) {\n      this.host = geometryMultipolygon;\n    } else {\n      throw new Error('aol-collection-coordinates must be a child of a geometry component');\n    }\n  }\n\n  ngOnInit() {\n    this.map.instance.on('change:view', e => this.onMapViewChanged(e));\n    this.mapSrid = this.map.instance\n      .getView()\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transformCoordinates();\n  }\n\n  private onMapViewChanged(event) {\n    this.mapSrid = event.target\n      .get(event.key)\n      .getProjection()\n      .getCode();\n    this.transformCoordinates();\n  }\n\n  private transformCoordinates() {\n    let transformedCoordinates: Coordinate[] | Coordinate[][] | Coordinate[][][];\n\n    if (this.srid === this.mapSrid) {\n      transformedCoordinates = this.coordinates;\n    } else {\n      switch (this.host.componentType) {\n        case 'geometry-linestring':\n        case 'geometry-multipoint':\n          transformedCoordinates = (this.coordinates as Coordinate[]).map(c => transform(c, this.srid, this.mapSrid));\n          break;\n        case 'geometry-polygon':\n        case 'geometry-multilinestring':\n          transformedCoordinates = (this.coordinates as Coordinate[][]).map(cc =>\n            cc.map(c => transform(c, this.srid, this.mapSrid))\n          );\n          break;\n        case 'geometry-multipolygon':\n          transformedCoordinates = (this.coordinates as Coordinate[][][]).map(ccc =>\n            ccc.map(cc => cc.map(c => transform(c, this.srid, this.mapSrid)))\n          );\n          break;\n      }\n    }\n\n    this.host.instance.setCoordinates(transformedCoordinates);\n  }\n}\n","import { Component, Input, Optional, OnInit } from '@angular/core';\nimport { Fill, Image, Stroke, Style, Text } from 'ol/style';\nimport { Geometry } from 'ol/geom';\nimport { FeatureComponent } from '../feature.component';\nimport { LayerVectorComponent } from '../layers/layervector.component';\nimport { GeometryFunction } from 'ol/style/Style';\n\n@Component({\n  selector: 'aol-style',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleComponent implements OnInit {\n  private host: FeatureComponent | LayerVectorComponent;\n  public instance: Style;\n  public componentType = 'style';\n\n  @Input()\n  geometry: string | Geometry | GeometryFunction;\n  @Input()\n  fill: Fill;\n  @Input()\n  image: Image;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  text: Text;\n  @Input()\n  zIndex: number;\n\n  constructor(@Optional() featureHost: FeatureComponent, @Optional() layerHost: LayerVectorComponent) {\n    // console.log('creating aol-style');\n    this.host = !!featureHost ? featureHost : layerHost;\n    if (!this.host) {\n      throw new Error('aol-style must be applied to a feature or a layer');\n    }\n  }\n\n  update() {\n    // console.log('updating style\\'s host: ', this.host);\n    this.host.instance.changed();\n  }\n\n  ngOnInit() {\n    // console.log('creating aol-style instance with: ', this);\n    this.instance = new Style(this);\n    this.host.instance.setStyle(this.instance);\n  }\n}\n","import { Component, Input, Host, AfterContentInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AtlasManager, Circle, Fill, Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-circle',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class StyleCircleComponent implements AfterContentInit, OnChanges, OnDestroy {\n  public componentType = 'style-circle';\n  public instance: Circle;\n\n  @Input()\n  fill: Fill;\n  @Input()\n  radius: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  stroke: Stroke;\n  @Input()\n  atlasManager: AtlasManager;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  /**\n   * WORK-AROUND: since the re-rendering is not triggered on style change\n   * we trigger a radius change.\n   * see openlayers #6233 and #5775\n   */\n  update() {\n    if (!!this.instance) {\n      // console.log('setting ol.style.Circle instance\\'s radius');\n      this.instance.setRadius(this.radius);\n    }\n    this.host.update();\n  }\n\n  ngAfterContentInit() {\n    // console.log('creating ol.style.Circle instance with: ', this);\n    this.instance = new Circle(this);\n    this.host.instance.setImage(this.instance);\n    this.host.update();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.radius) {\n      this.instance.setRadius(changes.radius.currentValue);\n    }\n    // console.log('changes detected in aol-style-circle, setting new radius: ', changes['radius'].currentValue);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-style-circle');\n    this.host.instance.setImage(null);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Text } from 'ol/style';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-text',\n  template: `\n    <div class=\"aol-style-text\"></div>\n  `,\n})\nexport class StyleTextComponent implements OnInit, OnChanges {\n  public instance: Text;\n  public componentType = 'style-text';\n\n  @Input()\n  font: string | undefined;\n  @Input()\n  offsetX: number | undefined;\n  @Input()\n  offsetY: number | undefined;\n  @Input()\n  scale: number | undefined;\n  @Input()\n  rotateWithView: boolean | undefined;\n  @Input()\n  rotation: number | undefined;\n  @Input()\n  text: string | undefined;\n  @Input()\n  textAlign: string | undefined;\n  @Input()\n  textBaseLine: string | undefined;\n\n  constructor(@Optional() private host: StyleComponent) {\n    if (!host) {\n      throw new Error('aol-style-text must be a descendant of aol-style');\n    }\n    // console.log('creating aol-style-text with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Text instance with: ', this);\n    this.instance = new Text(this);\n    this.host.instance.setText(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.font) {\n      this.instance.setFont(changes.font.currentValue);\n    }\n    if (changes.offsetX) {\n      this.instance.setOffsetX(changes.offsetX.currentValue);\n    }\n    if (changes.offsetY) {\n      this.instance.setOffsetY(changes.offsetY.currentValue);\n    }\n    if (changes.scale) {\n      this.instance.setScale(changes.scale.currentValue);\n    }\n    if (changes.rotation) {\n      this.instance.setRotation(changes.rotation.currentValue);\n    }\n    if (changes.text) {\n      this.instance.setText(changes.text.currentValue);\n    }\n    if (changes.textAlign) {\n      this.instance.setTextAlign(changes.textAlign.currentValue);\n    }\n    if (changes.textBaseLine) {\n      this.instance.setTextBaseline(changes.textBaseLine.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-text, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Stroke } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\n\n@Component({\n  selector: 'aol-style-stroke',\n  template: `\n    <div class=\"aol-style-stroke\"></div>\n  `,\n})\nexport class StyleStrokeComponent implements OnInit, OnChanges {\n  public instance: Stroke;\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n\n  @Input()\n  color: Color | undefined;\n  @Input()\n  lineCap: string | undefined;\n  @Input()\n  lineDash: number[] | undefined;\n  @Input()\n  lineJoin: string | undefined;\n  @Input()\n  miterLimit: number | undefined;\n  @Input()\n  width: number | undefined;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-stroke with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Stroke instance with: ', this);\n    this.instance = new Stroke(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setStroke(this.instance);\n        // console.log('setting ol.style instance\\'s stroke:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setStroke(this.instance);\n        break;\n      case 'style-circle':\n        this.host.stroke = this.instance;\n        // console.log('setting ol.style.circle instance\\'s stroke:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.color) {\n      this.instance.setColor(changes.color.currentValue);\n    }\n    if (changes.lineCap) {\n      this.instance.setLineCap(changes.lineCap.currentValue);\n    }\n    if (changes.lineDash) {\n      this.instance.setLineDash(changes.lineDash.currentValue);\n    }\n    if (changes.lineJoin) {\n      this.instance.setLineJoin(changes.lineJoin.currentValue);\n    }\n    if (changes.miterLimit) {\n      this.instance.setMiterLimit(changes.miterLimit.currentValue);\n    }\n    if (changes.width) {\n      this.instance.setWidth(changes.width.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-stroke, setting new properties: ', changes);\n  }\n}\n","import { Component, Input, Host, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Icon } from 'ol/style';\nimport IconAnchorUnits from 'ol/style/IconAnchorUnits';\nimport IconOrigin from 'ol/style/IconOrigin';\nimport { StyleComponent } from './style.component';\n\n@Component({\n  selector: 'aol-style-icon',\n  template: `\n    <div class=\"aol-style-icon\"></div>\n  `,\n})\nexport class StyleIconComponent implements OnInit, OnChanges {\n  public instance: Icon;\n\n  @Input()\n  anchor: [number, number];\n  @Input()\n  anchorXUnits: IconAnchorUnits;\n  @Input()\n  anchorYUnits: IconAnchorUnits;\n  @Input()\n  anchorOrigin: IconOrigin;\n  @Input()\n  color: [number, number, number, number];\n  @Input()\n  crossOrigin: IconOrigin;\n  @Input()\n  img: string;\n  @Input()\n  offset: [number, number];\n  @Input()\n  offsetOrigin: IconOrigin;\n  @Input()\n  opacity: number;\n  @Input()\n  scale: number;\n  @Input()\n  snapToPixel: boolean;\n  @Input()\n  rotateWithView: boolean;\n  @Input()\n  rotation: number;\n  @Input()\n  size: [number, number];\n  @Input()\n  imgSize: [number, number];\n  @Input()\n  src: string;\n\n  constructor(@Host() private host: StyleComponent) {}\n\n  ngOnInit() {\n    // console.log('creating ol.style.Icon instance with: ', this);\n    this.instance = new Icon(this);\n    this.host.instance.setImage(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.opacity) {\n      this.instance.setOpacity(changes.opacity.currentValue);\n    }\n    if (changes.rotation) {\n      this.instance.setRotation(changes.rotation.currentValue);\n    }\n    if (changes.scale) {\n      this.instance.setScale(changes.scale.currentValue);\n    }\n    if (changes.src) {\n      this.instance = new Icon(this);\n      this.host.instance.setImage(this.instance);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-icon: ', changes);\n  }\n}\n","import { Component, Input, Optional, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Fill } from 'ol/style';\nimport { StyleComponent } from './style.component';\nimport { StyleCircleComponent } from './circle.component';\nimport { StyleTextComponent } from './text.component';\nimport { Color } from 'ol/color';\nimport { ColorLike } from 'ol/colorlike';\n\n@Component({\n  selector: 'aol-style-fill',\n  template: `\n    <div class=\"aol-style-fill\"></div>\n  `,\n})\nexport class StyleFillComponent implements OnInit, OnChanges {\n  /* the typings do not have the setters */\n  private host: /*StyleComponent|StyleCircleComponent|StyleTextComponent*/ any;\n  public instance: Fill;\n\n  @Input()\n  color: Color | ColorLike;\n\n  constructor(\n    @Optional() styleHost: StyleComponent,\n    @Optional() styleCircleHost: StyleCircleComponent,\n    @Optional() styleTextHost: StyleTextComponent\n  ) {\n    if (!styleHost) {\n      throw new Error('aol-style-stroke must be a descendant of aol-style');\n    }\n    if (!!styleTextHost) {\n      this.host = styleTextHost;\n    } else if (!!styleCircleHost) {\n      this.host = styleCircleHost;\n    } else {\n      this.host = styleHost;\n    }\n    // console.log('creating aol-style-fill with: ', this);\n  }\n\n  ngOnInit() {\n    // console.log('creating ol.style.Fill instance with: ', this);\n    this.instance = new Fill(this);\n    switch (this.host.componentType) {\n      case 'style':\n        this.host.instance.setFill(this.instance);\n        // console.log('setting ol.style instance\\'s fill:', this.host);\n        break;\n      case 'style-text':\n        this.host.instance.setFill(this.instance);\n        break;\n      case 'style-circle':\n        this.host.fill = this.instance;\n        // console.log('setting ol.style.circle instance\\'s fill:', this.host);\n        break;\n      default:\n        throw new Error('unknown host type: ' + this.host);\n      // break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.instance) {\n      return;\n    }\n    if (changes.color) {\n      this.instance.setColor(changes.color.currentValue);\n    }\n    this.host.update();\n    // console.log('changes detected in aol-style-fill, setting new color: ', changes);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { Control, defaults } from 'ol/control';\nimport { Collection } from 'ol';\nimport { Options as AttributionOptions } from 'ol/control/Attribution';\nimport { Options as RotateOptions } from 'ol/control/Rotate';\nimport { Options as ZoomOptions } from 'ol/control/Zoom';\n\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-defaults',\n  template: '',\n})\nexport class DefaultControlComponent implements OnInit, OnDestroy {\n  instance: Collection<Control>;\n  @Input()\n  attribution: boolean;\n  @Input()\n  attributionOptions: AttributionOptions;\n  @Input()\n  rotate: boolean;\n  @Input()\n  rotateOptions: RotateOptions;\n  @Input()\n  zoom: boolean;\n  @Input()\n  zoomOptions: ZoomOptions;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    // console.log('ol.control.defaults init: ', this);\n    this.instance = defaults(this);\n    this.instance.forEach(c => this.map.instance.addControl(c));\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-defaults');\n    this.instance.forEach(c => this.map.instance.removeControl(c));\n  }\n}\n","import { Component, ContentChild, OnDestroy, OnInit } from '@angular/core';\nimport { Control } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { ContentComponent } from '../content.component';\nimport { TileGridComponent } from '../tilegrid.component';\n\n@Component({\n  selector: 'aol-control',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Control;\n  element: Element;\n  @ContentChild(ContentComponent, { static: true })\n  content: ContentComponent;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    if (this.content) {\n      this.element = this.content.elementRef.nativeElement;\n      this.instance = new Control(this);\n      this.map.instance.addControl(this.instance);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.map.instance.removeControl(this.instance);\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-attribution',\n  template: ``,\n})\nexport class ControlAttributionComponent implements OnInit, OnDestroy {\n  public componentType = 'control';\n  instance: Attribution;\n  target: Element;\n  @Input()\n  collapsible: boolean;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.Attribution init: ', this);\n    this.instance = new Attribution(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-attribution');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FullScreen } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-fullscreen',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlFullScreenComponent implements OnInit, OnDestroy {\n  instance: FullScreen;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  labelActive: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  keys: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-fullscreen');\n  }\n\n  ngOnInit() {\n    this.instance = new FullScreen(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-fullscreen');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport MousePosition from 'ol/control/MousePosition';\nimport { MapComponent } from '../map.component';\nimport { CoordinateFormat } from 'ol/coordinate';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-control-mouseposition',\n  template: ``,\n})\nexport class ControlMousePositionComponent implements OnInit, OnDestroy {\n  instance: MousePosition;\n  @Input()\n  coordinateFormat: CoordinateFormat;\n  @Input()\n  projection: ProjectionLike;\n  target: Element;\n\n  constructor(private map: MapComponent, private element: ElementRef) {}\n\n  ngOnInit() {\n    this.target = this.element.nativeElement;\n    // console.log('ol.control.MousePosition init: ', this);\n    this.instance = new MousePosition(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-mouseposition');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Layer } from 'ol/layer';\nimport { View } from 'ol';\nimport { OverviewMap } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-overviewmap',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlOverviewMapComponent implements OnInit, OnChanges, OnDestroy {\n  instance: OverviewMap;\n  @Input()\n  collapsed: boolean;\n  @Input()\n  collapseLabel: string;\n  @Input()\n  collapsible: boolean;\n  @Input()\n  label: string;\n  @Input()\n  layers: Layer[];\n  @Input()\n  target: Element;\n  @Input()\n  tipLabel: string;\n  @Input()\n  view: View;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeControl(this.instance);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance != null && changes.hasOwnProperty('view')) {\n      this.reloadInstance();\n    }\n  }\n\n  private reloadInstance() {\n    this.map.instance.removeControl(this.instance);\n    this.instance = new OverviewMap(this);\n    this.map.instance.addControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Rotate } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-rotate',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlRotateComponent implements OnInit, OnDestroy {\n  instance: Rotate;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string;\n  @Input()\n  tipLabel: string;\n  @Input()\n  duration: number;\n  @Input()\n  autoHide: boolean;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-rotate');\n  }\n\n  ngOnInit() {\n    this.instance = new Rotate(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-rotate');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ScaleLine } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-scaleline',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlScaleLineComponent implements OnInit, OnDestroy {\n  instance: ScaleLine;\n  @Input()\n  units: string;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-scaleline');\n  }\n\n  ngOnInit() {\n    this.instance = new ScaleLine(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-scaleline');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Zoom } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoom',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomComponent implements OnInit, OnDestroy {\n  instance: Zoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  zoomInLabel: string | Node;\n  @Input()\n  zoomOutLabel: string | Node;\n  @Input()\n  zoomInTipLabel: string;\n  @Input()\n  zoomOutTipLabel: string;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoom');\n  }\n\n  ngOnInit() {\n    this.instance = new Zoom(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoom');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomSlider } from 'ol/control';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-control-zoomslider',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomSliderComponent implements OnInit, OnDestroy {\n  instance: ZoomSlider;\n\n  @Input()\n  className: string;\n  @Input()\n  duration: number;\n  @Input()\n  maxResolution: number;\n  @Input()\n  minResolution: number;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomslider');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomSlider(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomslider');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ZoomToExtent } from 'ol/control';\nimport { MapComponent } from '../map.component';\nimport { Extent } from 'ol/extent';\n\n@Component({\n  selector: 'aol-control-zoomtoextent',\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class ControlZoomToExtentComponent implements OnInit, OnDestroy {\n  instance: ZoomToExtent;\n\n  @Input()\n  className: string;\n  @Input()\n  label: string | Node;\n  @Input()\n  tipLabel: string;\n  @Input()\n  extent: Extent;\n\n  constructor(private map: MapComponent) {\n    // console.log('instancing aol-control-zoomtoextent');\n  }\n\n  ngOnInit() {\n    this.instance = new ZoomToExtent(this);\n    this.map.instance.addControl(this.instance);\n  }\n\n  ngOnDestroy() {\n    // console.log('removing aol-control-zoomtoextent');\n    this.map.instance.removeControl(this.instance);\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { FormatComponent } from './format.component';\nimport { MVT } from 'ol/format';\nimport { Geometry } from 'ol/geom';\nimport GeometryType from 'ol/geom/GeometryType';\n\n@Component({\n  selector: 'aol-format-mvt',\n  template: '',\n  providers: [{ provide: FormatComponent, useExisting: forwardRef(() => FormatMVTComponent) }],\n})\nexport class FormatMVTComponent extends FormatComponent {\n  instance: MVT;\n\n  @Input()\n  featureClass:\n    | ((geom: Geometry | { [k: string]: any }) => any)\n    | ((geom: GeometryType, arg2: number[], arg3: number[] | number[][], arg4: { [k: string]: any }) => any);\n  @Input()\n  geometryName: string;\n  @Input()\n  layerName: string;\n  @Input()\n  layers: string[];\n\n  constructor() {\n    super();\n    this.instance = new MVT(this);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { defaults, Interaction } from 'ol/interaction';\nimport { Collection } from 'ol';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-default',\n  template: '',\n})\nexport class DefaultInteractionComponent implements OnInit, OnDestroy {\n  instance: Collection<Interaction>;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = defaults();\n    this.instance.forEach(i => this.map.instance.addInteraction(i));\n  }\n\n  ngOnDestroy() {\n    this.instance.forEach(i => this.map.instance.removeInteraction(i));\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DoubleClickZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-doubleclickzoom',\n  template: '',\n})\nexport class DoubleClickZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DoubleClickZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  delta: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DoubleClickZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DragAndDrop } from 'ol/interaction';\nimport Feature from 'ol/format/Feature';\nimport { MapComponent } from '../map.component';\nimport { ProjectionLike } from 'ol/proj';\n\n@Component({\n  selector: 'aol-interaction-draganddrop',\n  template: '',\n})\nexport class DragAndDropInteractionComponent implements OnInit, OnDestroy {\n  instance: DragAndDrop;\n\n  @Input()\n  formatConstructors: ((n: Feature) => any)[];\n  @Input()\n  projection: ProjectionLike;\n  @Input()\n  target: Element;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragAndDrop(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragBox } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\nimport { EndCondition } from 'ol/interaction/DragBox';\n\n@Component({\n  selector: 'aol-interaction-dragbox',\n  template: '',\n})\nexport class DragBoxInteractionComponent implements OnInit, OnDestroy {\n  instance: DragBox;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  boxEndCondition: EndCondition;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragBox(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragPan } from 'ol/interaction';\nimport Kinetic from 'ol/Kinetic';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragpan',\n  template: '',\n})\nexport class DragPanInteractionComponent implements OnInit, OnDestroy {\n  instance: DragPan;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  kinetic: Kinetic;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragPan(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotate } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotate',\n  template: '',\n})\nexport class DragRotateInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotate;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotate(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragRotateAndZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragrotateandzoom',\n  template: '',\n})\nexport class DragRotateAndZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragRotateAndZoom;\n\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragRotateAndZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { DragZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-dragzoom',\n  template: '',\n})\nexport class DragZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: DragZoom;\n\n  @Input()\n  className: string;\n  @Input()\n  condition: Condition;\n  @Input()\n  duration: number;\n  @Input()\n  out: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new DragZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MouseWheelZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-mousewheelzoom',\n  template: '',\n})\nexport class MouseWheelZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: MouseWheelZoom;\n  @Input()\n  duration: number;\n  @Input()\n  timeout: number;\n  @Input()\n  useAnchor: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new MouseWheelZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { PinchZoom } from 'ol/interaction';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-pinchzoom',\n  template: '',\n})\nexport class PinchZoomInteractionComponent implements OnInit, OnDestroy {\n  instance: PinchZoom;\n\n  @Input()\n  duration: number;\n  @Input()\n  constrainResolution: boolean;\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new PinchZoom(this);\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Draw } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Vector } from 'ol/source';\nimport GeometryType from 'ol/geom/GeometryType';\nimport { Style } from 'ol/style';\nimport { DrawEvent, GeometryFunction } from 'ol/interaction/Draw';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-draw',\n  template: '',\n})\nexport class DrawInteractionComponent implements OnInit, OnDestroy {\n  instance: Draw;\n\n  @Input()\n  clickTolerance?: number;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  source?: Vector;\n  @Input()\n  snapTolerance?: number;\n  @Input()\n  type: GeometryType;\n  @Input()\n  maxPoints?: number;\n  @Input()\n  minPoints?: number;\n  @Input()\n  finishCondition?: Condition;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  geometryFunction?: GeometryFunction;\n  @Input()\n  geometryName?: string;\n  @Input()\n  condition?: Condition;\n  @Input()\n  freehandCondition?: Condition;\n  @Input()\n  freehand?: boolean;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  olChange = new EventEmitter<DrawEvent>();\n  @Output()\n  olChangeActive = new EventEmitter<DrawEvent>();\n  @Output()\n  drawEnd = new EventEmitter<DrawEvent>();\n  @Output()\n  drawStart = new EventEmitter<DrawEvent>();\n  @Output()\n  propertyChange = new EventEmitter<DrawEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Draw(this);\n    this.instance.on('change', (event: DrawEvent) => this.olChange.emit(event));\n    this.instance.on('change:active', (event: DrawEvent) => this.olChangeActive.emit(event));\n    this.instance.on('drawend', (event: DrawEvent) => this.drawEnd.emit(event));\n    this.instance.on('drawstart', (event: DrawEvent) => this.drawStart.emit(event));\n    this.instance.on('propertychange', (event: DrawEvent) => this.propertyChange.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Select } from 'ol/interaction';\nimport { Layer } from 'ol/layer';\nimport { Style } from 'ol/style';\nimport { Collection, Feature } from 'ol';\nimport { SelectEvent, FilterFunction } from 'ol/interaction/Select';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-select',\n  template: '',\n})\nexport class SelectInteractionComponent implements OnInit, OnDestroy {\n  instance: Select;\n\n  @Input()\n  addCondition?: Condition;\n  @Input()\n  condition?: Condition;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  removeCondition?: Condition;\n  @Input()\n  toggleCondition?: Condition;\n  @Input()\n  multi?: boolean;\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  filter?: FilterFunction;\n  @Input()\n  wrapX?: boolean;\n\n  @Output()\n  olChange = new EventEmitter<SelectEvent>();\n  @Output()\n  olSelect = new EventEmitter<SelectEvent>();\n  @Output()\n  propertyChange = new EventEmitter<SelectEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Select(this);\n\n    this.instance.on('change', (event: SelectEvent) => this.olChange.emit(event));\n    this.instance.on('select', (event: SelectEvent) => this.olSelect.emit(event));\n    this.instance.on('propertychange', (event: SelectEvent) => this.propertyChange.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MapComponent } from '../map.component';\nimport { Modify } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Style } from 'ol/style';\nimport { Vector } from 'ol/source';\nimport { ModifyEvent } from 'ol/interaction/Modify';\nimport { StyleFunction } from 'ol/style/Style';\nimport { Condition } from 'ol/events/condition';\n\n@Component({\n  selector: 'aol-interaction-modify',\n  template: '',\n})\nexport class ModifyInteractionComponent implements OnInit, OnDestroy {\n  instance: Modify;\n\n  @Input()\n  condition?: Condition;\n  @Input()\n  deleteCondition?: Condition;\n  @Input()\n  pixelTolerance?: number;\n  @Input()\n  style?: Style | Style[] | StyleFunction;\n  @Input()\n  features: Collection<Feature>;\n  @Input()\n  wrapX?: boolean;\n  @Input()\n  source?: Vector;\n\n  @Output()\n  modifyEnd = new EventEmitter<ModifyEvent>();\n  @Output()\n  modifyStart = new EventEmitter<ModifyEvent>();\n  @Output()\n  olChange = new EventEmitter<ModifyEvent>();\n  @Output()\n  olChangeActive = new EventEmitter<ModifyEvent>();\n  @Output()\n  propertyChange = new EventEmitter<ModifyEvent>();\n\n  constructor(private map: MapComponent) {}\n\n  ngOnInit() {\n    this.instance = new Modify(this);\n    this.instance.on('change', (event: ModifyEvent) => this.olChange.emit(event));\n    this.instance.on('change:active', (event: ModifyEvent) => this.olChangeActive.emit(event));\n    this.instance.on('propertychange', (event: ModifyEvent) => this.propertyChange.emit(event));\n    this.instance.on('modifyend', (event: ModifyEvent) => this.modifyEnd.emit(event));\n    this.instance.on('modifystart', (event: ModifyEvent) => this.modifyStart.emit(event));\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Translate } from 'ol/interaction';\nimport { Collection, Feature } from 'ol';\nimport { Layer } from 'ol/layer';\nimport { TranslateEvent } from 'ol/interaction/Translate';\nimport { MapComponent } from '../map.component';\n\n@Component({\n  selector: 'aol-interaction-translate',\n  template: '',\n})\nexport class TranslateInteractionComponent implements OnInit, OnDestroy {\n  instance: Translate;\n\n  @Input()\n  features?: Collection<Feature>;\n  @Input()\n  layers?: Layer[] | ((layer: Layer) => boolean);\n  @Input()\n  hitTolerance?: number;\n\n  @Output()\n  olChange: EventEmitter<TranslateEvent>;\n  @Output()\n  propertyChange: EventEmitter<TranslateEvent>;\n  @Output()\n  translateEnd: EventEmitter<TranslateEvent>;\n  @Output()\n  translateStart: EventEmitter<TranslateEvent>;\n  @Output()\n  translating: EventEmitter<TranslateEvent>;\n\n  constructor(private map: MapComponent) {\n    this.olChange = new EventEmitter<TranslateEvent>();\n    this.propertyChange = new EventEmitter<TranslateEvent>();\n    this.translateEnd = new EventEmitter<TranslateEvent>();\n    this.translateStart = new EventEmitter<TranslateEvent>();\n    this.translating = new EventEmitter<TranslateEvent>();\n  }\n\n  ngOnInit() {\n    this.instance = new Translate(this);\n\n    this.instance.on('change', (event: TranslateEvent) => this.olChange.emit(event));\n    this.instance.on('propertychange', (event: TranslateEvent) => this.propertyChange.emit(event));\n    this.instance.on('translateend', (event: TranslateEvent) => this.translateEnd.emit(event));\n    this.instance.on('translatestart', (event: TranslateEvent) => this.translateStart.emit(event));\n    this.instance.on('translating', (event: TranslateEvent) => this.translating.emit(event));\n\n    this.map.instance.addInteraction(this.instance);\n  }\n\n  ngOnDestroy() {\n    this.map.instance.removeInteraction(this.instance);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Attribution } from 'ol/control';\n\n@Component({\n  selector: 'aol-attribution',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionComponent implements OnInit {\n  instance: Attribution;\n  html: string;\n\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    this.html = this.elementRef.nativeElement.innerHTML;\n    this.instance = new Attribution(this);\n  }\n}\n","import { AfterViewInit, Component, ContentChildren, Host, QueryList } from '@angular/core';\nimport { Attribution } from 'ol/control';\nimport { SourceComponent } from './sources/source.component';\nimport { AttributionComponent } from './attribution.component';\n\n@Component({\n  selector: 'aol-attributions',\n  template: '<ng-content></ng-content>',\n})\nexport class AttributionsComponent implements AfterViewInit {\n  instance: Array<Attribution>;\n\n  @ContentChildren(AttributionComponent)\n  attributions: QueryList<AttributionComponent>;\n\n  constructor(@Host() private source: SourceComponent) {}\n\n  /* we can do this at the very end */\n  ngAfterViewInit() {\n    if (this.attributions.length) {\n      this.instance = this.attributions.map(cmp => cmp.instance);\n      // console.log('setting attributions:', this.instance);\n      this.source.instance.setAttributions(this.instance);\n    }\n  }\n}\n","import { Component, Host, Input, OnInit, forwardRef } from '@angular/core';\nimport { SourceComponent } from './source.component';\nimport { LayerTileComponent } from '../layers/layertile.component';\nimport { UTFGrid } from 'ol/source';\n\n@Component({\n  selector: 'aol-source-utfgrid',\n  template: `\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: SourceComponent, useExisting: forwardRef(() => SourceUTFGridComponent) }],\n})\nexport class SourceUTFGridComponent extends SourceComponent implements OnInit {\n  instance: UTFGrid;\n  @Input() tileJSON: JSON;\n  @Input() url: string;\n\n  constructor(@Host() layer: LayerTileComponent) {\n    super(layer);\n  }\n\n  ngOnInit() {\n    this.instance = new UTFGrid(this);\n    this.host.instance.setSource(this.instance);\n  }\n}\n","/*\n * Public API Surface of ngx-openlayers\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './lib/view.component';\nimport { GraticuleComponent } from './lib/graticule.component';\nimport { LayerGroupComponent } from './lib/layers/layergroup.component';\nimport { LayerImageComponent } from './lib/layers/layerimage.component';\nimport { LayerTileComponent } from './lib/layers/layertile.component';\nimport { MapComponent } from './lib/map.component';\nimport { LayerVectorComponent } from './lib/layers/layervector.component';\nimport { LayerVectorTileComponent } from './lib/layers/layervectortile.component';\nimport { SourceOsmComponent } from './lib/sources/osm.component';\nimport { SourceBingmapsComponent } from './lib/sources/bingmaps.component';\nimport { SourceClusterComponent } from './lib/sources/cluster.component';\nimport { SourceVectorComponent } from './lib/sources/vector.component';\nimport { SourceXYZComponent } from './lib/sources/xyz.component';\nimport { SourceTileWMTSComponent } from './lib/sources/tilewmts.component';\nimport { SourceVectorTileComponent } from './lib/sources/vectortile.component';\nimport { SourceTileWMSComponent } from './lib/sources/tilewms.component';\nimport { SourceTileJSONComponent } from './lib/sources/tilejson.component';\nimport { SourceGeoJSONComponent } from './lib/sources/geojson.component';\nimport { SourceImageStaticComponent } from './lib/sources/imagestatic.component';\nimport { SourceImageWMSComponent } from './lib/sources/imagewms.component';\nimport { SourceImageArcGISRestComponent } from './lib/sources/imagearcgisrest.component';\nimport { SourceRasterComponent } from './lib/sources/raster.component';\nimport { FeatureComponent } from './lib/feature.component';\nimport { GeometryCircleComponent } from './lib/geom/geometrycircle.component';\nimport { GeometryLinestringComponent } from './lib/geom/geometrylinestring.component';\nimport { GeometryMultiLinestringComponent } from './lib/geom/geometrymultilinestring.component';\nimport { GeometryMultiPointComponent } from './lib/geom/geometrymultipoint.component';\nimport { GeometryMultiPolygonComponent } from './lib/geom/geometrymultipolygon.component';\nimport { GeometryPointComponent } from './lib/geom/geometrypoint.component';\nimport { GeometryPolygonComponent } from './lib/geom/geometrypolygon.component';\nimport { CoordinateComponent } from './lib/coordinate.component';\nimport { CollectionCoordinatesComponent } from './lib/collectioncoordinates.component';\nimport { StyleComponent } from './lib/styles/style.component';\nimport { StyleCircleComponent } from './lib/styles/circle.component';\nimport { StyleStrokeComponent } from './lib/styles/stroke.component';\nimport { StyleIconComponent } from './lib/styles/icon.component';\nimport { StyleFillComponent } from './lib/styles/fill.component';\nimport { StyleTextComponent } from './lib/styles/text.component';\nimport { DefaultControlComponent } from './lib/controls/default.component';\nimport { ControlComponent } from './lib/controls/control.component';\nimport { ControlAttributionComponent } from './lib/controls/attribution.component';\nimport { ControlFullScreenComponent } from './lib/controls/fullscreen.component';\nimport { ControlMousePositionComponent } from './lib/controls/mouseposition.component';\nimport { ControlOverviewMapComponent } from './lib/controls/overviewmap.component';\nimport { ControlRotateComponent } from './lib/controls/rotate.component';\nimport { ControlScaleLineComponent } from './lib/controls/scaleline.component';\nimport { ControlZoomComponent } from './lib/controls/zoom.component';\nimport { ControlZoomSliderComponent } from './lib/controls/zoomslider.component';\nimport { ControlZoomToExtentComponent } from './lib/controls/zoomtoextent.component';\nimport { FormatMVTComponent } from './lib/formats/mvt.component';\nimport { TileGridComponent } from './lib/tilegrid.component';\nimport { TileGridWMTSComponent } from './lib/tilegridwmts.component';\nimport { DefaultInteractionComponent } from './lib/interactions/default.component';\nimport { DoubleClickZoomInteractionComponent } from './lib/interactions/doubleclickzoom.component';\nimport { DragAndDropInteractionComponent } from './lib/interactions/draganddrop.component';\nimport { DragBoxInteractionComponent } from './lib/interactions/dragbox.component';\nimport { DragPanInteractionComponent } from './lib/interactions/dragpan.component';\nimport { DragRotateInteractionComponent } from './lib/interactions/dragrotate.component';\nimport { DragRotateAndZoomInteractionComponent } from './lib/interactions/dragrotateandzoom.component';\nimport { DragZoomInteractionComponent } from './lib/interactions/dragzoom.component';\nimport { MouseWheelZoomInteractionComponent } from './lib/interactions/mousewheelzoom.component';\nimport { PinchZoomInteractionComponent } from './lib/interactions/pinchzoom.component';\nimport { DrawInteractionComponent } from './lib/interactions/draw.component';\nimport { SelectInteractionComponent } from './lib/interactions/select.component';\nimport { ModifyInteractionComponent } from './lib/interactions/modify.component';\nimport { TranslateInteractionComponent } from './lib/interactions/translate.component';\nimport { OverlayComponent } from './lib/overlay.component';\nimport { ContentComponent } from './lib/content.component';\nimport { AttributionsComponent } from './lib/attributions.component';\nimport { AttributionComponent } from './lib/attribution.component';\nimport { SourceUTFGridComponent } from './lib/sources/utfgrid.component';\n\nexport {\n  MapComponent,\n  ViewComponent,\n  GraticuleComponent,\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceRasterComponent,\n  SourceImageArcGISRestComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n};\n\nconst COMPONENTS = [\n  MapComponent,\n\n  ViewComponent,\n  GraticuleComponent,\n\n  LayerGroupComponent,\n  LayerImageComponent,\n  LayerTileComponent,\n  LayerVectorComponent,\n  LayerVectorTileComponent,\n\n  SourceOsmComponent,\n  SourceBingmapsComponent,\n  SourceClusterComponent,\n  SourceUTFGridComponent,\n  SourceVectorComponent,\n  SourceXYZComponent,\n  SourceVectorTileComponent,\n  SourceTileWMSComponent,\n  SourceTileWMTSComponent,\n  SourceTileJSONComponent,\n  SourceGeoJSONComponent,\n  SourceImageStaticComponent,\n  SourceImageWMSComponent,\n  SourceImageArcGISRestComponent,\n  SourceRasterComponent,\n  FeatureComponent,\n  GeometryLinestringComponent,\n  GeometryMultiLinestringComponent,\n  GeometryMultiPointComponent,\n  GeometryMultiPolygonComponent,\n  GeometryPointComponent,\n  GeometryPolygonComponent,\n  GeometryCircleComponent,\n  CoordinateComponent,\n  CollectionCoordinatesComponent,\n\n  StyleComponent,\n  StyleCircleComponent,\n  StyleFillComponent,\n  StyleIconComponent,\n  StyleStrokeComponent,\n  StyleTextComponent,\n\n  DefaultControlComponent,\n  ControlComponent,\n  ControlAttributionComponent,\n  ControlFullScreenComponent,\n  ControlMousePositionComponent,\n  ControlOverviewMapComponent,\n  ControlRotateComponent,\n  ControlScaleLineComponent,\n  ControlZoomComponent,\n  ControlZoomSliderComponent,\n  ControlZoomToExtentComponent,\n\n  FormatMVTComponent,\n  TileGridComponent,\n  TileGridWMTSComponent,\n\n  DefaultInteractionComponent,\n  DoubleClickZoomInteractionComponent,\n  DragAndDropInteractionComponent,\n  DragBoxInteractionComponent,\n  DragPanInteractionComponent,\n  DragRotateInteractionComponent,\n  DragRotateAndZoomInteractionComponent,\n  DragZoomInteractionComponent,\n  MouseWheelZoomInteractionComponent,\n  PinchZoomInteractionComponent,\n  DrawInteractionComponent,\n  SelectInteractionComponent,\n  ModifyInteractionComponent,\n  TranslateInteractionComponent,\n\n  OverlayComponent,\n  ContentComponent,\n  AttributionsComponent,\n  AttributionComponent,\n];\n\n@NgModule({\n  declarations: COMPONENTS,\n  imports: [CommonModule],\n  exports: COMPONENTS,\n})\nexport class AngularOpenlayersModule {}\n"]}